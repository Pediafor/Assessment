@tailwind base;
@tailwind components;
@tailwind utilities;

html, body { height: 100%; }

/* Theme tokens */
:root {
	--bg: 255 255 255;           /* white */
	--fg: 17 24 39;              /* gray-900 */
	--muted: 107 114 128;        /* gray-500 */
	--card: 249 250 251;         /* gray-50 */
	--primary: 0 102 204;        /* brand blue */
	--primary-foreground: 255 255 255;
	--success: 5 150 105;        /* emerald-600 */
	--success-foreground: 255 255 255;
	--warning: 217 119 6;        /* amber-600 */
	--warning-foreground: 255 255 255;
	--destructive: 220 38 38;    /* red-600 */
	--destructive-foreground: 255 255 255;
	--border: 229 231 235;       /* gray-200 */
	--ring: 59 130 246;          /* blue-500 */
}

.dark {
	--bg: 15 23 42;              /* slate-900 */
	--fg: 248 250 252;            /* slate-50 */
	--muted: 203 213 225;         /* slate-300 */
	--card: 30 41 59;             /* slate-800 */
	--primary: 51 136 221;        /* lighter brand */
	--primary-foreground: 255 255 255;
	--success: 16 185 129;        /* emerald-500 */
	--success-foreground: 255 255 255;
	--warning: 245 158 11;        /* amber-500 */
	--warning-foreground: 0 0 0;
	--destructive: 248 113 113;   /* red-400 */
	--destructive-foreground: 0 0 0;
	--border: 51 65 85;           /* slate-700 */
	--ring: 59 130 246;           /* blue-500 */
}

@layer base {
	* { @apply border-border; }
	html { color-scheme: light dark; }
	body { @apply bg-background text-foreground; }
}

@layer utilities {
	.bg-background { background-color: rgb(var(--bg)); }
	.text-foreground { color: rgb(var(--fg)); }
	.text-muted { color: rgb(var(--muted)); }
	.bg-card { background-color: rgb(var(--card)); }
	.border-border { border-color: rgb(var(--border)); }
	.ring-brand { --tw-ring-color: rgb(var(--ring)); }

	/* Semantic helpers */
	.bg-success { background-color: rgb(var(--success)); }
	.text-success { color: rgb(var(--success)); }
	.bg-warning { background-color: rgb(var(--warning)); }
	.text-warning { color: rgb(var(--warning)); }
	.bg-destructive { background-color: rgb(var(--destructive)); }
	.text-destructive { color: rgb(var(--destructive)); }
}
